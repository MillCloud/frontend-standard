import{_ as e,f as a,h as t,M as r}from"./app.c1b432c2.js";const f=JSON.parse('{"title":"文档","description":"","frontmatter":{},"headers":[{"level":2,"title":"尊重有限脑力","slug":"尊重有限脑力","link":"#尊重有限脑力","children":[]},{"level":2,"title":"从阅读者角度出发","slug":"从阅读者角度出发","link":"#从阅读者角度出发","children":[]},{"level":2,"title":"先描述问题，再描述解决方案","slug":"先描述问题-再描述解决方案","link":"#先描述问题-再描述解决方案","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"relativePath":"guide/document.md","lastUpdated":1671518933000}'),i={name:"guide/document.md"},n=r('<h1 id="文档" tabindex="-1">文档 <a class="header-anchor" href="#文档" aria-hidden="true">#</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>该部分需要完善。</p></div><p>编写不同文档遵循着通用的原则。</p><h2 id="尊重有限脑力" tabindex="-1">尊重有限脑力 <a class="header-anchor" href="#尊重有限脑力" aria-hidden="true">#</a></h2><p>当人开始阅读时，他们从一定量的有限脑力开始。当他们用完这部分脑力时，他们就会停止学习。</p><p>复杂的句子、一次必须学习多个概念、不直接相关的抽象示例，都会更快地耗尽脑力。</p><p>使用短句、分解出可消化的部分、调整文档的顺序，能减缓脑力的消耗，使阅读者得以继续下去。</p><h2 id="从阅读者角度出发" tabindex="-1">从阅读者角度出发 <a class="header-anchor" href="#从阅读者角度出发" aria-hidden="true">#</a></h2><p>当我们彻底了解某件事情时，它才会变得很明显。</p><p>因此，为了写出好的文档，试着思考你在接收某部分信息时首先需要知道什么。你需要了解哪些专业术语？你误解过什么？什么东西花了很长时间才真正掌握？</p><p>好的文档本身就能满足阅读者的需要，而无需阅读者借助别的资料来理解它。</p><h2 id="先描述问题-再描述解决方案" tabindex="-1">先描述问题，再描述解决方案 <a class="header-anchor" href="#先描述问题-再描述解决方案" aria-hidden="true">#</a></h2><p>在展示一个功能如何工作之前，必须解释它为什么存在。否则，阅读者将没有背景，不知道这些信息对他们是否重要，也就失去了对这些信息的兴趣。</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h2><ul><li><a href="https://github.com/ruanyf/document-style-guide" target="_blank" rel="noreferrer">中文技术文档写作规范</a></li><li><a href="https://github.com/vuejs-translations/docs-zh-cn/blob/main/.github/contributing/writing-guide.md" target="_blank" rel="noreferrer">Vue 文档写作指南</a></li></ul>',15),l=[n];function d(s,h,c,o,p,u){return a(),t("div",null,l)}const m=e(i,[["render",d]]);export{f as __pageData,m as default};
